module RuboCop
  module YARD
    VERSION: String
    # See the writing guide of rbs: https://github.com/ruby/rbs#guides
  end
  module Cop
    module YARD
      type tag = ::YARD::Tags::Tag | ::YARD::Tags::OverloadTag | ::YARD::Tags::OptionTag
      type tag_types = YARD::Tags::TypesExplainer::Type
                     | ::YARD::Tags::TypesExplainer::CollectionType
                     | ::YARD::Tags::TypesExplainer::FixedCollectionType
                     | ::YARD::Tags::TypesExplainer::HashCollectionType
      class CollectionType
        private def check_mismatch_collection_type: (untyped comment, tag_types types_explainer) -> void
      end

      module Helper
        def extract_tag_types: (tag tag) -> Array[String]?
        def inline_comment?: (::Parser::Source::Comment comment) -> bool
      end

      class TagTypePosition < ::RuboCop::Cop::Base
        include YARD::Helper

        def check: (::Parser::Source::Comment comment) -> void
        def include_yard_tag?: (::Parser::Source::Comment comment) -> bool
        def include_yard_tag_type?: (::Parser::Source::Comment comment) -> bool
      end

      class TagTypeSyntax < ::RuboCop::Cop::Base
        include YARD::Helper

        private

        def check: (::Parser::Source::Comment comment) -> void
        def check_syntax_error: (::Parser::Source::Comment comment) { () -> void } -> void
        def include_yard_tag?: (::Parser::Source::Comment comment) -> bool
        def tag_range_for_comment: (::Parser::Source::Comment comment) -> untyped
      end

      class MismatchName < ::RuboCop::Cop::Base
        include YARD::Helper

        def add_offense_to_tag: (untyped node, ::Parser::Source::Comment comment, ::YARD::Tags::Tag tag) -> void
        def cop_config_prototype_name: () -> ("before" | "after")
      end
    end
  end
end
